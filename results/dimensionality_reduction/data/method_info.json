[
  {
    "task_id": "dimensionality_reduction",
    "method_id": "random_features",
    "method_name": "Random Features",
    "method_summary": "Negative control by randomly embedding into a 2D space.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/control_methods/random_features/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "spectral_features",
    "method_name": "Spectral Features",
    "method_summary": "Positive control by Use 1000-dimensional diffusions maps as an embedding.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/control_methods/spectral_features/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "true_features",
    "method_name": "True Features",
    "method_summary": "Positive control by retaining the dimensionality without loss of information.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/control_methods/true_features/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "densmap",
    "method_name": "densMAP",
    "method_summary": "Modified UMAP with preservation of local density information",
    "is_baseline": false,
    "paper_reference": "narayan2021assessing",
    "code_url": "https://github.com/lmcinnes/umap",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/densmap/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "diffusion_map",
    "method_name": "Diffusion Map",
    "method_summary": "Finding meaningful geometric descriptions of datasets using diffusion maps.",
    "is_baseline": false,
    "paper_reference": "coifman2006diffusion",
    "code_url": "https://github.com/theislab/destiny",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/diffusion_map/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "ivis",
    "method_name": "ivis",
    "method_summary": "Structure-preserving dimensionality reduction using a siamese neural network trained on triplets.",
    "is_baseline": false,
    "paper_reference": "szubert2019structurepreserving",
    "code_url": "https://github.com/beringresearch/ivis",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/ivis/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "lmds",
    "method_name": "LMDS",
    "method_summary": "Landmark Multi-Dimensional Scaling",
    "is_baseline": false,
    "paper_reference": "saelens2019comparison",
    "code_url": "https://github.com/dynverse/lmds",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/lmds/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "neuralee",
    "method_name": "NeuralEE",
    "method_summary": "Non-linear method that uses a neural network to preserve pairwise distances between data points in a high-dimensional space.",
    "is_baseline": false,
    "paper_reference": "xiong2020neuralee",
    "code_url": "https://github.com/HiBearME/NeuralEE",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/neuralee/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "pca",
    "method_name": "PCA",
    "method_summary": "A linear method that finds orthogonal directions to compute the two-dimensional embedding.",
    "is_baseline": false,
    "paper_reference": "pearson1901pca",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/pca/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "phate",
    "method_name": "PHATE",
    "method_summary": "Preservating trajectories in a dataset by using heat diffusion potential.",
    "is_baseline": false,
    "paper_reference": "moon2019visualizing",
    "code_url": "https://github.com/KrishnaswamyLab/PHATE",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/phate/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "pymde",
    "method_name": "PyMDE",
    "method_summary": "A Python implementation of Minimum-Distortion Embedding",
    "is_baseline": false,
    "paper_reference": "agrawal2021mde",
    "code_url": "https://github.com/cvxgrp/pymde",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/pymde/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "simlr",
    "method_name": "SIMLR",
    "method_summary": "Multikernel-based learning of distance metrics from gene expression data for dimension reduction, clustering and visulaization.",
    "is_baseline": false,
    "paper_reference": "wang2017visualization",
    "code_url": "https://github.com/BatzoglouLabSU/SIMLR",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/simlr/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "tsne",
    "method_name": "t-SNE",
    "method_summary": "Minimizing Kullback-Leibler divergence by converting similarities into joint probabilities between data points and the low/high dimensional embedding.",
    "is_baseline": false,
    "paper_reference": "vandermaaten2008visualizing",
    "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html#sklearn.manifold.TSNE",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/tsne/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  },
  {
    "task_id": "dimensionality_reduction",
    "method_id": "umap",
    "method_name": "UMAP",
    "method_summary": "A manifold learning algorithm that utilizes topological data analysis for dimension reduction.",
    "is_baseline": false,
    "paper_reference": "mcinnes2018umap",
    "code_url": "https://github.com/lmcinnes/umap",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/2c2d6f0a7ecc3cac51fa23acc0eec036cee39446/src/tasks/dimensionality_reduction/methods/umap/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "2c2d6f0a7ecc3cac51fa23acc0eec036cee39446"
  }
]
