[
  {
    "task_id": "predict_modality",
    "method_id": "mean_per_gene",
    "method_name": "Mean per gene",
    "method_summary": "Returns the mean expression value per gene.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/control_methods/meanpergene/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "random_predict",
    "method_name": "Random predictions",
    "method_summary": "Returns random training profiles.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/control_methods/random_predict/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "zeros",
    "method_name": "Zeros",
    "method_summary": "Returns a prediction consisting of all zeros.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/control_methods/zeros/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "solution",
    "method_name": "Solution",
    "method_summary": "Returns the ground-truth solution.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/control_methods/solution/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "knnr_py",
    "method_name": "KNNR (Py)",
    "method_summary": "K-nearest neighbor regression in Python.",
    "is_baseline": false,
    "paper_reference": "fix1989discriminatory",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/knnr_py/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "knnr_r",
    "method_name": "KNNR (R)",
    "method_summary": "K-nearest neighbor regression in R.",
    "is_baseline": false,
    "paper_reference": "fix1989discriminatory",
    "code_url": "https://github.com/cran/FNN",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/knnr_r/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "lm",
    "method_name": "Linear Model",
    "method_summary": "Linear model regression.",
    "is_baseline": false,
    "paper_reference": "wilkinson1973symbolic",
    "code_url": "https://github.com/RcppCore/RcppArmadillo",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/lm/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "newwave_knnr",
    "method_name": "NewWave+KNNR",
    "method_summary": "Perform DR with NewWave, predict modality with KNN regression.",
    "is_baseline": false,
    "paper_reference": "agostinis2022newwave",
    "code_url": "https://github.com/fedeago/NewWave",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/newwave_knnr/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "random_forest",
    "method_name": "Random Forests",
    "method_summary": "Random forest regression.",
    "is_baseline": false,
    "paper_reference": "breiman2001random",
    "code_url": "https://github.com/cran/randomForest",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/random_forest/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  },
  {
    "task_id": "predict_modality",
    "method_id": "guanlab_dengkw_pm",
    "method_name": "Guanlab-dengkw",
    "method_summary": "A kernel ridge regression method with RBF kernel.",
    "is_baseline": false,
    "paper_reference": "lance2022multimodal",
    "code_url": "https://github.com/openproblems-bio/neurips2021_multimodal_topmethods/tree/main/src/predict_modality/methods/Guanlab-dengkw",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/949427cd2a6927a19a61ffc2f94d6cdd0be3cac2/src/tasks/predict_modality/methods/guanlab_dengkw_pm/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "949427cd2a6927a19a61ffc2f94d6cdd0be3cac2"
  }
]
