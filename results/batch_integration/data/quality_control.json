[
    {
        "task_id": "batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.2222222222222222, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 180, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods Ã— #metrics Ã— #datasets.\n  Task id: batch_integration\n  Number of results: 180\n  Number of methods: 18\n  Number of metrics: 11\n  Number of datasets: 10\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.5444444444444445, 
        "severity": 3, 
        "severity_value": 5.444444444444445, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: asw_batch\n  Percentage missing: 54%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.5444444444444445, 
        "severity": 3, 
        "severity_value": 5.444444444444445, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: asw_label\n  Percentage missing: 54%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.85, 
        "severity": 3, 
        "severity_value": 8.5, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 85%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.5666666666666667, 
        "severity": 3, 
        "severity_value": 5.666666666666666, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: ari\n  Percentage missing: 57%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.5666666666666667, 
        "severity": 3, 
        "severity_value": 5.666666666666666, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: nmi\n  Percentage missing: 57%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.4833333333333333, 
        "severity": 3, 
        "severity_value": 4.833333333333332, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 48%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.9166666666666666, 
        "severity": 3, 
        "severity_value": 9.166666666666666, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 92%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.5611111111111111, 
        "severity": 3, 
        "severity_value": 5.611111111111111, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 56%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.6222222222222222, 
        "severity": 3, 
        "severity_value": 6.222222222222222, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 62%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.6388888888888888, 
        "severity": 3, 
        "severity_value": 6.388888888888888, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: kbet\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.6111111111111112, 
        "severity": 3, 
        "severity_value": 6.111111111111112, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  Metric id: pcr\n  Percentage missing: 61%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.8363636363636364, 
        "severity": 3, 
        "severity_value": 8.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: bbknn\n  Percentage missing: 84%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.6363636363636364, 
        "severity": 3, 
        "severity_value": 6.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: combat\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'fastmnn_embedding' %missing", 
        "value": 0.2909090909090909, 
        "severity": 2, 
        "severity_value": 2.9090909090909087, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: fastmnn_embedding\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'fastmnn_feature' %missing", 
        "value": 0.6363636363636364, 
        "severity": 3, 
        "severity_value": 6.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: fastmnn_feature\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.7363636363636363, 
        "severity": 3, 
        "severity_value": 7.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: liger\n  Percentage missing: 74%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnn_correct' %missing", 
        "value": 1.0, 
        "severity": 3, 
        "severity_value": 10.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: mnn_correct\n  Percentage missing: 100%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.9, 
        "severity": 3, 
        "severity_value": 9.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: mnnpy\n  Percentage missing: 90%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.5727272727272728, 
        "severity": 3, 
        "severity_value": 5.7272727272727275, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: pyliger\n  Percentage missing: 57%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex_embed' %missing", 
        "value": 0.6636363636363636, 
        "severity": 3, 
        "severity_value": 6.636363636363636, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scalex_embed\n  Percentage missing: 66%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex_feature' %missing", 
        "value": 0.7181818181818183, 
        "severity": 3, 
        "severity_value": 7.1818181818181825, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scalex_feature\n  Percentage missing: 72%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama_embed' %missing", 
        "value": 0.7363636363636363, 
        "severity": 3, 
        "severity_value": 7.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scanorama_embed\n  Percentage missing: 74%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama_feature' %missing", 
        "value": 0.709090909090909, 
        "severity": 3, 
        "severity_value": 7.09090909090909, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scanorama_feature\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.5727272727272728, 
        "severity": 3, 
        "severity_value": 5.7272727272727275, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scanvi\n  Percentage missing: 57%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.3727272727272727, 
        "severity": 3, 
        "severity_value": 3.7272727272727266, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: scvi\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.4545454545454546, 
        "severity": 3, 
        "severity_value": 4.545454545454546, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: no_integration_batch\n  Percentage missing: 45%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'random_embed_cell' %missing", 
        "value": 0.28181818181818175, 
        "severity": 2, 
        "severity_value": 2.8181818181818175, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: random_embed_cell\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'random_embed_cell_jitter' %missing", 
        "value": 0.32727272727272727, 
        "severity": 3, 
        "severity_value": 3.2727272727272725, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: random_embed_cell_jitter\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Method 'random_integration' %missing", 
        "value": 0.8545454545454545, 
        "severity": 3, 
        "severity_value": 8.545454545454545, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  method id: random_integration\n  Percentage missing: 85%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.5606060606060606, 
        "severity": 3, 
        "severity_value": 5.6060606060606055, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 56%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/zebrafish' %missing", 
        "value": 0.3282828282828283, 
        "severity": 3, 
        "severity_value": 3.282828282828283, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: openproblems_v1/zebrafish\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.9545454545454546, 
        "severity": 3, 
        "severity_value": 9.545454545454545, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 95%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.8585858585858586, 
        "severity": 3, 
        "severity_value": 8.585858585858585, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 86%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.8282828282828283, 
        "severity": 3, 
        "severity_value": 8.282828282828282, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 83%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/immune_cells' %missing", 
        "value": 0.24242424242424243, 
        "severity": 2, 
        "severity_value": 2.4242424242424243, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: openproblems_v1/immune_cells\n  Percentage missing: 24%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/pancreas' %missing", 
        "value": 0.18686868686868685, 
        "severity": 1, 
        "severity_value": 1.8686868686868685, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: openproblems_v1/pancreas\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.7878787878787878, 
        "severity": 3, 
        "severity_value": 7.878787878787878, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 79%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/cengen' %missing", 
        "value": 0.6363636363636364, 
        "severity": 3, 
        "severity_value": 6.363636363636363, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: openproblems_v1/cengen\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.8939393939393939, 
        "severity": 3, 
        "severity_value": 8.93939393939394, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 89%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 0.4418, 
        "severity": 0, 
        "severity_value": 0.2209, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 0.4418%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding asw_batch", 
        "value": 0.6255, 
        "severity": 0, 
        "severity_value": 0.31275, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: asw_batch\n  Best score: 0.6255%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature asw_batch", 
        "value": 0.4803, 
        "severity": 0, 
        "severity_value": 0.24015, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: asw_batch\n  Best score: 0.4803%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.2522, 
        "severity": 0, 
        "severity_value": 0.1261, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.2522%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0.1846, 
        "severity": 0, 
        "severity_value": 0.0923, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0.1846%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.2366, 
        "severity": 0, 
        "severity_value": 0.1183, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.2366%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed asw_batch", 
        "value": 0.1515, 
        "severity": 0, 
        "severity_value": 0.07575, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: asw_batch\n  Best score: 0.1515%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature asw_batch", 
        "value": 0.4012, 
        "severity": 0, 
        "severity_value": 0.2006, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: asw_batch\n  Best score: 0.4012%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed asw_batch", 
        "value": 0.6275, 
        "severity": 0, 
        "severity_value": 0.31375, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: asw_batch\n  Best score: 0.6275%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature asw_batch", 
        "value": 0.5332, 
        "severity": 0, 
        "severity_value": 0.2666, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: asw_batch\n  Best score: 0.5332%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0.5711, 
        "severity": 0, 
        "severity_value": 0.28555, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0.5711%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 0.6092, 
        "severity": 0, 
        "severity_value": 0.3046, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 0.6092%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell asw_batch", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: asw_batch\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell asw_batch", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: asw_batch\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter asw_batch", 
        "value": 0.9723, 
        "severity": 0, 
        "severity_value": 0.48615, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: asw_batch\n  Best score: 0.9723%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0.2437, 
        "severity": 0, 
        "severity_value": 0.12185, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0.2437%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding asw_label", 
        "value": 0.3408, 
        "severity": 0, 
        "severity_value": 0.1704, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: asw_label\n  Best score: 0.3408%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature asw_label", 
        "value": 0.2909, 
        "severity": 0, 
        "severity_value": 0.14545, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: asw_label\n  Best score: 0.2909%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.3556, 
        "severity": 0, 
        "severity_value": 0.1778, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.3556%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0.0451, 
        "severity": 0, 
        "severity_value": 0.02255, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0.0451%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.3707, 
        "severity": 0, 
        "severity_value": 0.18535, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.3707%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed asw_label", 
        "value": 0.0852, 
        "severity": 0, 
        "severity_value": 0.0426, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: asw_label\n  Best score: 0.0852%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature asw_label", 
        "value": 0.1381, 
        "severity": 0, 
        "severity_value": 0.06905, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: asw_label\n  Best score: 0.1381%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed asw_label", 
        "value": 0.1433, 
        "severity": 0, 
        "severity_value": 0.07165, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: asw_label\n  Best score: 0.1433%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature asw_label", 
        "value": 0.1374, 
        "severity": 0, 
        "severity_value": 0.0687, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: asw_label\n  Best score: 0.1374%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0.4185, 
        "severity": 0, 
        "severity_value": 0.20925, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0.4185%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0.3938, 
        "severity": 0, 
        "severity_value": 0.1969, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0.3938%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0.2636, 
        "severity": 0, 
        "severity_value": 0.1318, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0.2636%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter asw_label", 
        "value": 0.9806, 
        "severity": 0, 
        "severity_value": 0.4903, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: asw_label\n  Best score: 0.9806%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding cell_cycle_conservation", 
        "value": 0.9565, 
        "severity": 0, 
        "severity_value": 0.47825, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: cell_cycle_conservation\n  Best score: 0.9565%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature cell_cycle_conservation", 
        "value": 0.9564, 
        "severity": 0, 
        "severity_value": 0.4782, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: cell_cycle_conservation\n  Best score: 0.9564%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0.1668, 
        "severity": 0, 
        "severity_value": 0.0834, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0.1668%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 0.7824, 
        "severity": 0, 
        "severity_value": 0.3912, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 0.7824%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed cell_cycle_conservation", 
        "value": 0.447, 
        "severity": 0, 
        "severity_value": 0.2235, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: cell_cycle_conservation\n  Best score: 0.447%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature cell_cycle_conservation", 
        "value": 0.5289, 
        "severity": 0, 
        "severity_value": 0.26445, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: cell_cycle_conservation\n  Best score: 0.5289%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed cell_cycle_conservation", 
        "value": 0.2812, 
        "severity": 0, 
        "severity_value": 0.1406, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: cell_cycle_conservation\n  Best score: 0.2812%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature cell_cycle_conservation", 
        "value": 0.2661, 
        "severity": 0, 
        "severity_value": 0.13305, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: cell_cycle_conservation\n  Best score: 0.2661%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 0.8631, 
        "severity": 0, 
        "severity_value": 0.43155, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.8631%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 0.7388, 
        "severity": 0, 
        "severity_value": 0.3694, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.7388%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell cell_cycle_conservation", 
        "value": 0.7386, 
        "severity": 0, 
        "severity_value": 0.3693, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: cell_cycle_conservation\n  Best score: 0.7386%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter cell_cycle_conservation", 
        "value": 0.739, 
        "severity": 0, 
        "severity_value": 0.3695, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: cell_cycle_conservation\n  Best score: 0.739%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.9453, 
        "severity": 0, 
        "severity_value": 0.47265, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.9453%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 0.7996, 
        "severity": 0, 
        "severity_value": 0.3998, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 0.7996%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding ari", 
        "value": 0.8639, 
        "severity": 0, 
        "severity_value": 0.43195, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: ari\n  Best score: 0.8639%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature ari", 
        "value": 0.8614, 
        "severity": 0, 
        "severity_value": 0.4307, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: ari\n  Best score: 0.8614%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 0.7451, 
        "severity": 0, 
        "severity_value": 0.37255, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 0.7451%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.0298, 
        "severity": 0, 
        "severity_value": 0.0149, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.0298%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 0.6688, 
        "severity": 0, 
        "severity_value": 0.3344, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 0.6688%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed ari", 
        "value": 0.3101, 
        "severity": 0, 
        "severity_value": 0.15505, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: ari\n  Best score: 0.3101%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature ari", 
        "value": 0.4115, 
        "severity": 0, 
        "severity_value": 0.20575, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: ari\n  Best score: 0.4115%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed ari", 
        "value": 0.0958, 
        "severity": 0, 
        "severity_value": 0.0479, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: ari\n  Best score: 0.0958%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature ari", 
        "value": 0.0846, 
        "severity": 0, 
        "severity_value": 0.0423, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: ari\n  Best score: 0.0846%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.9493, 
        "severity": 0, 
        "severity_value": 0.47465, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.9493%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 0.948, 
        "severity": 0, 
        "severity_value": 0.474, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 0.948%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.0001, 
        "severity": 0, 
        "severity_value": 5e-05, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.0001%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell ari", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: ari\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration ari", 
        "value": 0.0001, 
        "severity": 0, 
        "severity_value": 5e-05, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: ari\n  Best score: 0.0001%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.901, 
        "severity": 0, 
        "severity_value": 0.4505, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.901%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 0.8358, 
        "severity": 0, 
        "severity_value": 0.4179, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 0.8358%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding nmi", 
        "value": 0.8709, 
        "severity": 0, 
        "severity_value": 0.43545, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: nmi\n  Best score: 0.8709%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature nmi", 
        "value": 0.8673, 
        "severity": 0, 
        "severity_value": 0.43365, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: nmi\n  Best score: 0.8673%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 0.7452, 
        "severity": 0, 
        "severity_value": 0.3726, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 0.7452%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.1563, 
        "severity": 0, 
        "severity_value": 0.07815, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.1563%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.7625, 
        "severity": 0, 
        "severity_value": 0.38125, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.7625%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed nmi", 
        "value": 0.4639, 
        "severity": 0, 
        "severity_value": 0.23195, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: nmi\n  Best score: 0.4639%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature nmi", 
        "value": 0.4778, 
        "severity": 0, 
        "severity_value": 0.2389, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: nmi\n  Best score: 0.4778%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed nmi", 
        "value": 0.1613, 
        "severity": 0, 
        "severity_value": 0.08065, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: nmi\n  Best score: 0.1613%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature nmi", 
        "value": 0.1592, 
        "severity": 0, 
        "severity_value": 0.0796, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: nmi\n  Best score: 0.1592%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 0.9149, 
        "severity": 0, 
        "severity_value": 0.45745, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 0.9149%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 0.9138, 
        "severity": 0, 
        "severity_value": 0.4569, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 0.9138%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.019, 
        "severity": 0, 
        "severity_value": 0.0095, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.019%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell nmi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: nmi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9975, 
        "severity": 0, 
        "severity_value": 0.49875, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9975%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9722, 
        "severity": 0, 
        "severity_value": 0.4861, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9722%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding graph_connectivity", 
        "value": 0.8076, 
        "severity": 0, 
        "severity_value": -0.8076, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: graph_connectivity\n  Worst score: 0.8076%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature graph_connectivity", 
        "value": 0.9664, 
        "severity": 0, 
        "severity_value": 0.4832, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: graph_connectivity\n  Best score: 0.9664%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.8578, 
        "severity": 0, 
        "severity_value": 0.4289, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.8578%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.2316, 
        "severity": 0, 
        "severity_value": 0.1158, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.2316%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9316, 
        "severity": 0, 
        "severity_value": 0.4658, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9316%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed graph_connectivity", 
        "value": 0.8008, 
        "severity": 0, 
        "severity_value": 0.4004, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: graph_connectivity\n  Best score: 0.8008%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature graph_connectivity", 
        "value": 0.8597, 
        "severity": 0, 
        "severity_value": 0.42985, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: graph_connectivity\n  Best score: 0.8597%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed graph_connectivity", 
        "value": 0.2466, 
        "severity": 0, 
        "severity_value": 0.1233, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: graph_connectivity\n  Best score: 0.2466%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature graph_connectivity", 
        "value": 0.2216, 
        "severity": 0, 
        "severity_value": 0.1108, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: graph_connectivity\n  Best score: 0.2216%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9838, 
        "severity": 0, 
        "severity_value": 0.4919, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9838%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.9824, 
        "severity": 0, 
        "severity_value": 0.4912, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.9824%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.0692, 
        "severity": 0, 
        "severity_value": 0.0346, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.0692%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell graph_connectivity", 
        "value": 0.5021, 
        "severity": 0, 
        "severity_value": -0.5021, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: graph_connectivity\n  Worst score: 0.5021%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell graph_connectivity", 
        "value": 0.9991, 
        "severity": 0, 
        "severity_value": 0.49955, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: graph_connectivity\n  Best score: 0.9991%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration graph_connectivity", 
        "value": 0.0228, 
        "severity": 0, 
        "severity_value": 0.0114, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: graph_connectivity\n  Best score: 0.0228%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature hvg_overlap", 
        "value": 0.4148, 
        "severity": 0, 
        "severity_value": 0.2074, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: hvg_overlap\n  Best score: 0.4148%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.4245, 
        "severity": 0, 
        "severity_value": 0.21225, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.4245%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature hvg_overlap", 
        "value": 0.3182, 
        "severity": 0, 
        "severity_value": 0.1591, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: hvg_overlap\n  Best score: 0.3182%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature hvg_overlap", 
        "value": 0.3774, 
        "severity": 0, 
        "severity_value": 0.1887, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: hvg_overlap\n  Best score: 0.3774%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0.4631, 
        "severity": 0, 
        "severity_value": 0.23155, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0.4631%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding isolated_label_asw", 
        "value": 0.3782, 
        "severity": 0, 
        "severity_value": 0.1891, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: isolated_label_asw\n  Best score: 0.3782%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature isolated_label_asw", 
        "value": 0.3554, 
        "severity": 0, 
        "severity_value": 0.1777, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: isolated_label_asw\n  Best score: 0.3554%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3909, 
        "severity": 0, 
        "severity_value": 0.19545, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3909%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0.1519, 
        "severity": 0, 
        "severity_value": 0.07595, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0.1519%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.3186, 
        "severity": 0, 
        "severity_value": 0.1593, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.3186%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed isolated_label_asw", 
        "value": 0.1612, 
        "severity": 0, 
        "severity_value": 0.0806, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: isolated_label_asw\n  Best score: 0.1612%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature isolated_label_asw", 
        "value": 0.1562, 
        "severity": 0, 
        "severity_value": 0.0781, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: isolated_label_asw\n  Best score: 0.1562%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed isolated_label_asw", 
        "value": 0.1259, 
        "severity": 0, 
        "severity_value": 0.06295, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: isolated_label_asw\n  Best score: 0.1259%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature isolated_label_asw", 
        "value": 0.1006, 
        "severity": 0, 
        "severity_value": 0.0503, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: isolated_label_asw\n  Best score: 0.1006%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0.5726, 
        "severity": 0, 
        "severity_value": 0.2863, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0.5726%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0.5617, 
        "severity": 0, 
        "severity_value": 0.28085, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0.5617%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0.2799, 
        "severity": 0, 
        "severity_value": 0.13995, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0.2799%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell isolated_label_asw", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: isolated_label_asw\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter isolated_label_asw", 
        "value": 0.9853, 
        "severity": 0, 
        "severity_value": 0.49265, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: isolated_label_asw\n  Best score: 0.9853%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.8443, 
        "severity": 0, 
        "severity_value": 0.42215, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.8443%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.7999, 
        "severity": 0, 
        "severity_value": 0.39995, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.7999%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding isolated_label_f1", 
        "value": 0.8839, 
        "severity": 0, 
        "severity_value": 0.44195, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: isolated_label_f1\n  Best score: 0.8839%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature isolated_label_f1", 
        "value": 0.7594, 
        "severity": 0, 
        "severity_value": 0.3797, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: isolated_label_f1\n  Best score: 0.7594%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.5591, 
        "severity": 0, 
        "severity_value": 0.27955, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.5591%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0.0083, 
        "severity": 0, 
        "severity_value": 0.00415, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0.0083%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 0.8102, 
        "severity": 0, 
        "severity_value": 0.4051, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 0.8102%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed isolated_label_f1", 
        "value": 0.4649, 
        "severity": 0, 
        "severity_value": 0.23245, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: isolated_label_f1\n  Best score: 0.4649%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature isolated_label_f1", 
        "value": 0.4687, 
        "severity": 0, 
        "severity_value": 0.23435, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: isolated_label_f1\n  Best score: 0.4687%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed isolated_label_f1", 
        "value": 0.0552, 
        "severity": 0, 
        "severity_value": 0.0276, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: isolated_label_f1\n  Best score: 0.0552%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature isolated_label_f1", 
        "value": 0.0576, 
        "severity": 0, 
        "severity_value": 0.0288, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: isolated_label_f1\n  Best score: 0.0576%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.9075, 
        "severity": 0, 
        "severity_value": 0.45375, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.9075%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 0.8995, 
        "severity": 0, 
        "severity_value": 0.44975, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 0.8995%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 0.0529, 
        "severity": 0, 
        "severity_value": 0.02645, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 0.0529%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell isolated_label_f1", 
        "value": 0.9996, 
        "severity": 0, 
        "severity_value": 0.4998, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: isolated_label_f1\n  Best score: 0.9996%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration isolated_label_f1", 
        "value": 0.0044, 
        "severity": 0, 
        "severity_value": 0.0022, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: isolated_label_f1\n  Best score: 0.0044%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.2346, 
        "severity": 0, 
        "severity_value": 0.1173, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.2346%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding kbet", 
        "value": 0.7979, 
        "severity": 0, 
        "severity_value": 0.39895, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: kbet\n  Best score: 0.7979%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature kbet", 
        "value": 0.4188, 
        "severity": 0, 
        "severity_value": 0.2094, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: kbet\n  Best score: 0.4188%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.4658, 
        "severity": 0, 
        "severity_value": 0.2329, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.4658%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0016, 
        "severity": 0, 
        "severity_value": 0.0008, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0016%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.6005, 
        "severity": 0, 
        "severity_value": 0.30025, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.6005%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed kbet", 
        "value": 0.2756, 
        "severity": 0, 
        "severity_value": 0.1378, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: kbet\n  Best score: 0.2756%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature kbet", 
        "value": 0.378, 
        "severity": 0, 
        "severity_value": 0.189, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: kbet\n  Best score: 0.378%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed kbet", 
        "value": 0.0029, 
        "severity": 0, 
        "severity_value": 0.00145, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: kbet\n  Best score: 0.0029%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature kbet", 
        "value": 0.0039, 
        "severity": 0, 
        "severity_value": 0.00195, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: kbet\n  Best score: 0.0039%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.7769, 
        "severity": 0, 
        "severity_value": 0.38845, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.7769%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.7543, 
        "severity": 0, 
        "severity_value": 0.37715, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.7543%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.3472, 
        "severity": 0, 
        "severity_value": 0.1736, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.3472%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell kbet", 
        "value": 0.9709, 
        "severity": 0, 
        "severity_value": 0.48545, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: kbet\n  Best score: 0.9709%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter kbet", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: kbet\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_embedding pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_embedding performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_embedding pcr", 
        "value": 0.6276, 
        "severity": 0, 
        "severity_value": 0.3138, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_embedding performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_embedding\n  Metric id: pcr\n  Best score: 0.6276%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score fastmnn_feature pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method fastmnn_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score fastmnn_feature pcr", 
        "value": 0.6276, 
        "severity": 0, 
        "severity_value": 0.3138, 
        "code": "best_score <= 2", 
        "message": "Method fastmnn_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: fastmnn_feature\n  Metric id: pcr\n  Best score: 0.6276%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.8907, 
        "severity": 0, 
        "severity_value": 0.44535, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.8907%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnn_correct pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnn_correct performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnn_correct pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnn_correct performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnn_correct\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.7156, 
        "severity": 0, 
        "severity_value": 0.3578, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.7156%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.8909, 
        "severity": 0, 
        "severity_value": 0.44545, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.8909%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_embed pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_embed pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_embed\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex_feature pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex_feature pcr", 
        "value": 0.9977, 
        "severity": 0, 
        "severity_value": 0.49885, 
        "code": "best_score <= 2", 
        "message": "Method scalex_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scalex_feature\n  Metric id: pcr\n  Best score: 0.9977%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_embed pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_embed performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_embed pcr", 
        "value": 0.2011, 
        "severity": 0, 
        "severity_value": 0.10055, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_embed performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_embed\n  Metric id: pcr\n  Best score: 0.2011%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama_feature pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama_feature performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama_feature pcr", 
        "value": 0.1173, 
        "severity": 0, 
        "severity_value": 0.05865, 
        "code": "best_score <= 2", 
        "message": "Method scanorama_feature performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanorama_feature\n  Metric id: pcr\n  Best score: 0.1173%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.827, 
        "severity": 0, 
        "severity_value": 0.4135, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.827%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell pcr", 
        "value": 0.9992, 
        "severity": 0, 
        "severity_value": 0.4996, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell\n  Metric id: pcr\n  Best score: 0.9992%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_embed_cell_jitter pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_embed_cell_jitter performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_embed_cell_jitter pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method random_embed_cell_jitter performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_embed_cell_jitter\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Worst score random_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method random_integration performs much worse than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "batch_integration", 
        "category": "Scaling", 
        "name": "Best score random_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method random_integration performs a lot better than baselines.\n  Task id: batch_integration\n  Method id: random_integration\n  Metric id: pcr\n  Best score: 0%\n"
    }
]