[
    {
        "method_name": "Random Integration by Batch",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "batch_random_integration",
        "method_description": ""
    },
    {
        "method_name": "Random Integration by Celltype",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "celltype_random_integration",
        "method_description": ""
    },
    {
        "method_name": "Combat (full/scaled)",
        "method_summary": "TODO",
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
        "paper_reference": "hansen2012removing",
        "paper_year": 2007,
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "combat_full_scaled",
        "method_description": ""
    },
    {
        "method_name": "Combat (full/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
        "paper_reference": "hansen2012removing",
        "paper_year": 2007,
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "combat_full_unscaled",
        "method_description": ""
    },
    {
        "method_name": "Combat (hvg/scaled)",
        "method_summary": "TODO",
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
        "paper_reference": "hansen2012removing",
        "paper_year": 2007,
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "combat_hvg_scaled",
        "method_description": ""
    },
    {
        "method_name": "Combat (hvg/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
        "paper_reference": "hansen2012removing",
        "paper_year": 2007,
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "combat_hvg_unscaled",
        "method_description": ""
    },
    {
        "method_name": "FastMNN feature (full/scaled)",
        "method_summary": "TODO",
        "paper_name": "A description of the theory behind the fastMNN algorithm",
        "paper_reference": "lun2019fastmnn",
        "paper_year": 2019,
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "fastmnn_feature_full_scaled",
        "method_description": ""
    },
    {
        "method_name": "FastMNN feature (full/unscaled)",
        "method_summary": "TODO",
        "paper_name": "A description of the theory behind the fastMNN algorithm",
        "paper_reference": "lun2019fastmnn",
        "paper_year": 2019,
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "fastmnn_feature_full_unscaled",
        "method_description": ""
    },
    {
        "method_name": "FastMNN feature (hvg/scaled)",
        "method_summary": "TODO",
        "paper_name": "A description of the theory behind the fastMNN algorithm",
        "paper_reference": "lun2019fastmnn",
        "paper_year": 2019,
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "fastmnn_feature_hvg_scaled",
        "method_description": ""
    },
    {
        "method_name": "FastMNN feature (hvg/unscaled)",
        "method_summary": "TODO",
        "paper_name": "A description of the theory behind the fastMNN algorithm",
        "paper_reference": "lun2019fastmnn",
        "paper_year": 2019,
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "fastmnn_feature_hvg_unscaled",
        "method_description": ""
    },
    {
        "method_name": "MNN (full/scaled)",
        "method_summary": "TODO",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/chriscainx/mnnpy",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mnn_full_scaled",
        "method_description": ""
    },
    {
        "method_name": "MNN (full/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/chriscainx/mnnpy",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mnn_full_unscaled",
        "method_description": ""
    },
    {
        "method_name": "MNN (hvg/scaled)",
        "method_summary": "TODO",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/chriscainx/mnnpy",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mnn_hvg_scaled",
        "method_description": ""
    },
    {
        "method_name": "MNN (hvg/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/chriscainx/mnnpy",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mnn_hvg_unscaled",
        "method_description": ""
    },
    {
        "method_name": "No Integration",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "no_integration",
        "method_description": ""
    },
    {
        "method_name": "Random Integration",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "random_integration",
        "method_description": ""
    },
    {
        "method_name": "SCALEX (full)",
        "method_summary": "TODO",
        "paper_name": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
        "paper_reference": "xiong2021online",
        "paper_year": 2022,
        "code_url": "https://github.com/jsxlei/SCALEX",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scalex_full",
        "method_description": ""
    },
    {
        "method_name": "SCALEX (hvg)",
        "method_summary": "TODO",
        "paper_name": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
        "paper_reference": "xiong2021online",
        "paper_year": 2022,
        "code_url": "https://github.com/jsxlei/SCALEX",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scalex_hvg",
        "method_description": ""
    },
    {
        "method_name": "Scanorama gene output (full/scaled)",
        "method_summary": "TODO",
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
        "paper_reference": "hie2019efficient",
        "paper_year": 2019,
        "code_url": "https://github.com/brianhie/scanorama",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanorama_feature_full_scaled",
        "method_description": ""
    },
    {
        "method_name": "Scanorama gene output (full/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
        "paper_reference": "hie2019efficient",
        "paper_year": 2019,
        "code_url": "https://github.com/brianhie/scanorama",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanorama_feature_full_unscaled",
        "method_description": ""
    },
    {
        "method_name": "Scanorama gene output (hvg/scaled)",
        "method_summary": "TODO",
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
        "paper_reference": "hie2019efficient",
        "paper_year": 2019,
        "code_url": "https://github.com/brianhie/scanorama",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanorama_feature_hvg_scaled",
        "method_description": ""
    },
    {
        "method_name": "Scanorama gene output (hvg/unscaled)",
        "method_summary": "TODO",
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
        "paper_reference": "hie2019efficient",
        "paper_year": 2019,
        "code_url": "https://github.com/brianhie/scanorama",
        "image": "openproblems-r-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "batch_integration_feature",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanorama_feature_hvg_unscaled",
        "method_description": ""
    }
]