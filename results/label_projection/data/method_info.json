[
  {
    "task_id": "label_projection",
    "method_id": "true_labels",
    "method_name": "True labels",
    "method_summary": "a positive control, solution labels are copied 1 to 1 to the predicted data.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/control_methods/true_labels/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "majority_vote",
    "method_name": "Majority Vote",
    "method_summary": "A control-type method that predicts all cells to belong to the most abundant cell type in the dataset",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/control_methods/majority_vote/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "random_labels",
    "method_name": "Random Labels",
    "method_summary": "a negative control, where the labels are randomly predicted.",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/control_methods/random_labels/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "knn",
    "method_name": "KNN",
    "method_summary": "Assumes cells with similar gene expression belong to the same cell type, and assigns an unlabelled cell the most common cell type among its k nearest neighbors in PCA space.",
    "is_baseline": false,
    "paper_reference": "cover1967nearest",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/knn/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "logistic_regression",
    "method_name": "Logistic Regression",
    "method_summary": "Logistic Regression with 100-dimensional PCA coordinates estimates parameters for multivariate classification by minimizing cross entropy loss over cell type classes.",
    "is_baseline": false,
    "paper_reference": "hosmer2013applied",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/logistic_regression/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "mlp",
    "method_name": "Multilayer perceptron",
    "method_summary": "A neural network with 100-dimensional PCA input, two hidden layers, and gradient descent weight updates to minimize cross entropy loss.",
    "is_baseline": false,
    "paper_reference": "hinton1989connectionist",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/mlp/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "scanvi",
    "method_name": "SCANVI",
    "method_summary": "ScANVI predicts cell type labels for unlabelled test data by leveraging cell type labels, modelling uncertainty and using deep neural networks with stochastic optimization.",
    "is_baseline": false,
    "paper_reference": "lotfollahi2020query",
    "code_url": "https://github.com/YosefLab/scvi-tools",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/scanvi/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "scanvi_scarches",
    "method_name": "scANVI+scArches",
    "method_summary": "Query to reference single-cell integration with transfer learning with scANVI and scArches",
    "is_baseline": false,
    "paper_reference": "lotfollahi2020query",
    "code_url": "https://github.com/scverse/scvi-tools",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/scanvi_scarches/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  },
  {
    "task_id": "label_projection",
    "method_id": "xgboost",
    "method_name": "XGBoost",
    "method_summary": "XGBoost is a decision tree model that averages multiple trees with gradient boosting.",
    "is_baseline": false,
    "paper_reference": "chen2016xgboost",
    "code_url": "https://github.com/dmlc/xgboost",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/tree/8764f1b41d62bfa6bc55d4d7be710d8589e16513/src/tasks/label_projection/methods/xgboost/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "8764f1b41d62bfa6bc55d4d7be710d8589e16513"
  }
]
