[
    {
        "method_name": "K-neighbors classifier (log CP10k)",
        "method_summary": "TODO",
        "paper_name": "Nearest neighbor pattern classification",
        "paper_reference": "cover1967nearest",
        "paper_year": 1967,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
        "image": "openproblems",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "knn_classifier_log_cp10k",
        "method_description": ""
    },
    {
        "method_name": "K-neighbors classifier (log scran)",
        "method_summary": "TODO",
        "paper_name": "Nearest neighbor pattern classification",
        "paper_reference": "cover1967nearest",
        "paper_year": 1967,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
        "image": "openproblems-r-base",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "knn_classifier_scran",
        "method_description": ""
    },
    {
        "method_name": "Logistic regression (log CP10k)",
        "method_summary": "TODO",
        "paper_name": "Applied Logistic Regression",
        "paper_reference": "hosmer2013applied",
        "paper_year": 2013,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
        "image": "openproblems",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "logistic_regression_log_cp10k",
        "method_description": ""
    },
    {
        "method_name": "Logistic regression (log scran)",
        "method_summary": "TODO",
        "paper_name": "Applied Logistic Regression",
        "paper_reference": "hosmer2013applied",
        "paper_year": 2013,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
        "image": "openproblems-r-base",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "logistic_regression_scran",
        "method_description": ""
    },
    {
        "method_name": "Majority Vote",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "majority_vote",
        "method_description": ""
    },
    {
        "method_name": "Multilayer perceptron (log CP10k)",
        "method_summary": "TODO",
        "paper_name": "Connectionist learning procedures",
        "paper_reference": "hinton1989connectionist",
        "paper_year": 1990,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
        "image": "openproblems",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mlp_log_cp10k",
        "method_description": ""
    },
    {
        "method_name": "Multilayer perceptron (log scran)",
        "method_summary": "TODO",
        "paper_name": "Connectionist learning procedures",
        "paper_reference": "hinton1989connectionist",
        "paper_year": 1990,
        "code_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
        "image": "openproblems-r-base",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "mlp_scran",
        "method_description": ""
    },
    {
        "method_name": "Random Labels",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "random_labels",
        "method_description": ""
    },
    {
        "method_name": "scANVI (All genes)",
        "method_summary": "TODO",
        "paper_name": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models",
        "paper_reference": "xu2021probabilistic",
        "paper_year": 2021,
        "code_url": "https://github.com/YosefLab/scvi-tools",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanvi_all_genes",
        "method_description": ""
    },
    {
        "method_name": "scANVI (Seurat v3 2000 HVG)",
        "method_summary": "TODO",
        "paper_name": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models",
        "paper_reference": "xu2021probabilistic",
        "paper_year": 2021,
        "code_url": "https://github.com/YosefLab/scvi-tools",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scanvi_hvg",
        "method_description": ""
    },
    {
        "method_name": "scArches+scANVI (All genes)",
        "method_summary": "TODO",
        "paper_name": "Query to reference single-cell integration with transfer learning",
        "paper_reference": "lotfollahi2020query",
        "paper_year": 2021,
        "code_url": "https://github.com/YosefLab/scvi-tools",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scarches_scanvi_all_genes",
        "method_description": ""
    },
    {
        "method_name": "scArches+scANVI (Seurat v3 2000 HVG)",
        "method_summary": "TODO",
        "paper_name": "Query to reference single-cell integration with transfer learning",
        "paper_reference": "lotfollahi2020query",
        "paper_year": 2021,
        "code_url": "https://github.com/YosefLab/scvi-tools",
        "image": "openproblems-python-pytorch",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "scarches_scanvi_hvg",
        "method_description": ""
    },
    {
        "method_name": "Seurat reference mapping (SCTransform)",
        "method_summary": "TODO",
        "paper_name": "Integrated analysis of multimodal single-cell data",
        "paper_reference": "hao2021integrated",
        "paper_year": 2021,
        "code_url": "https://github.com/satijalab/seurat",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "seurat",
        "method_description": ""
    },
    {
        "method_name": "True Labels",
        "method_summary": "TODO",
        "paper_name": "Open Problems for Single Cell Analysis",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "true_labels",
        "method_description": ""
    },
    {
        "method_name": "XGBoost (log CP10k)",
        "method_summary": "TODO",
        "paper_name": "XGBoost: A Scalable Tree Boosting System",
        "paper_reference": "chen2016xgboost",
        "paper_year": 2016,
        "code_url": "https://xgboost.readthedocs.io/en/stable/index.html",
        "image": "openproblems-python-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "xgboost_log_cp10k",
        "method_description": ""
    },
    {
        "method_name": "XGBoost (log scran)",
        "method_summary": "TODO",
        "paper_name": "XGBoost: A Scalable Tree Boosting System",
        "paper_reference": "chen2016xgboost",
        "paper_year": 2016,
        "code_url": "https://xgboost.readthedocs.io/en/stable/index.html",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "label_projection",
        "commit_sha": "60444e75411e346d7b2673fac484f43fbadaf061",
        "method_id": "xgboost_scran",
        "method_description": ""
    }
]