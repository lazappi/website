[
  {
    "id": "logistic_regression",
    "type": "method",
    "label": "Logistic Regression",
    "paper_name": "Applied Logistic Regression",
    "paper_url": "https://books.google.com/books?id=64JYAwAAQBAJ",
    "paper_year": 2013,
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
    "v1_url": "openproblems/tasks/label_projection/methods/logistic_regression.py",
    "v1_commit": "2097bbb3e996f66e98128c9ac95bc9640a496e0d",
    "v1_comp_id": "logistic_regression_log_cpm",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/logistic_regression/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Logistic regression method",
    "paper_doi": null,
    "status": "out of date (sha: c2470ce02e6f196267cec1c554ba7ae389c0956a)"
  },
  {
    "id": "mlp",
    "type": "method",
    "label": "Multilayer perceptron",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
    "v1_url": "openproblems/tasks/label_projection/methods/mlp.py",
    "v1_commit": "c2470ce02e6f196267cec1c554ba7ae389c0956a",
    "v1_comp_id": "mlp_log_cpm",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/mlp/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Multilayer perceptron",
    "paper_doi": "10.1016/0004-3702(89)90049-0",
    "status": "up to date"
  },
  {
    "id": "knn",
    "type": "method",
    "label": "KNN",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
    "v1_url": "openproblems/tasks/label_projection/methods/knn_classifier.py",
    "v1_commit": "2097bbb3e996f66e98128c9ac95bc9640a496e0d",
    "v1_comp_id": "knn_classifier_log_cpm",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/knn/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "K-Nearest Neighbors classifier",
    "paper_doi": "10.1109/TIT.1967.1053964",
    "status": "out of date (sha: c2470ce02e6f196267cec1c554ba7ae389c0956a)"
  },
  {
    "id": "scanvi",
    "type": "method",
    "label": "SCANVI",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/YosefLab/scvi-tools",
    "doc_url": "https://scarches.readthedocs.io/en/latest/scanvi_surgery_pipeline.html",
    "v1_url": "openproblems/tasks/label_projection/methods/scvi_tools.py",
    "v1_commit": "411a416150ecabce25e1f59bde422a029d0a8baa",
    "v1_comp_id": "scarches_scanvi_hvg",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/scanvi/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Probabilistic harmonization and annotation of single-cell \ntranscriptomics data with deep generative models.\n",
    "paper_doi": "10.1101/2020.07.16.205997",
    "status": "out of date (sha: 4bb8a7e04545a06c336d3d9364a1dd84fa2af1a4)"
  },
  {
    "id": "seurat_transferdata",
    "type": "method",
    "label": "Seurat TransferData",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/satijalab/seurat",
    "doc_url": "https://satijalab.org/seurat/articles/integration_mapping.html",
    "v1_url": "openproblems/tasks/label_projection/methods/seurat.py",
    "v1_commit": "3f19f0e87a8bc8b59c7521ba01917580aff81bc8",
    "v1_comp_id": "seurat",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/seurat_transferdata/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "The Seurat v3 anchoring procedure is designed to integrate\ndiverse single-cell datasets across technologies and modalities. \n",
    "paper_doi": "10.1101/460147",
    "status": "up to date"
  },
  {
    "id": "xgboost",
    "type": "method",
    "label": "XGBoost",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/dmlc/xgboost",
    "doc_url": "https://xgboost.readthedocs.io/en/stable/index.html",
    "v1_url": "openproblems/tasks/label_projection/methods/xgboost.py",
    "v1_commit": "123bb7b39c51c58e19ddf0fbbc1963c3dffde14c",
    "v1_comp_id": "xgboost_log_cpm",
    "preferred_normalization": "log_cpm",
    "config_path": "methods/xgboost/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "XGBoost: A Scalable Tree Boosting System",
    "paper_doi": "10.1145/2939672.2939785",
    "status": "up to date"
  },
  {
    "id": "majority_vote",
    "type": "negative_control",
    "label": "Majority Vote",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": null,
    "doc_url": null,
    "v1_url": "openproblems/tasks/label_projection/methods/baseline.py",
    "v1_commit": "b460ecb183328c857cbbf653488f522a4034a61c",
    "v1_comp_id": "majority_vote",
    "preferred_normalization": "counts",
    "config_path": "control_methods/majority_vote/config.vsh.yaml",
    "namespace": "label_projection/control_methods",
    "description": "Baseline method using majority voting",
    "paper_doi": null,
    "status": "up to date"
  },
  {
    "id": "random_labels",
    "type": "negative_control",
    "label": "Random Labels",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": null,
    "doc_url": null,
    "v1_url": "openproblems/tasks/label_projection/methods/baseline.py",
    "v1_commit": "b460ecb183328c857cbbf653488f522a4034a61c",
    "v1_comp_id": "random_labels",
    "preferred_normalization": "counts",
    "config_path": "control_methods/random_labels/config.vsh.yaml",
    "namespace": "label_projection/control_methods",
    "description": "Negative control method which generates random labels",
    "paper_doi": null,
    "status": "up to date"
  },
  {
    "id": "true_labels",
    "type": "positive_control",
    "label": "True labels",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": null,
    "doc_url": null,
    "v1_url": "openproblems/tasks/label_projection/methods/baseline.py",
    "v1_commit": "b460ecb183328c857cbbf653488f522a4034a61c",
    "v1_comp_id": "true_labels",
    "preferred_normalization": "counts",
    "config_path": "control_methods/true_labels/config.vsh.yaml",
    "namespace": "label_projection/control_methods",
    "description": "Positive control method by returning the true labels",
    "paper_doi": null,
    "status": "up to date"
  }
]