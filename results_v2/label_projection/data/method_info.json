[
  {
    "id": "logistic_regression",
    "type": "method",
    "label": "Logistic Regression",
    "paper_name": "Applied Logistic Regression",
    "paper_url": "https://books.google.com/books?id=64JYAwAAQBAJ",
    "paper_year": 2013,
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
    "v1_url": "openproblems/tasks/label_projection/methods/logistic_regression.py",
    "v1_commit": "c2470ce02e6f196267cec1c554ba7ae389c0956a",
    "preferred_normalization": "log_cpm",
    "variants": {
      "preferred_normalization": "log_scran_pooling"
    },
    "config_path": "/viash_automount/home/rcannood/workspace/openproblems/openproblems-v2/src/label_projection/methods/logistic_regression/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Logistic regression method",
    "paper_doi": null,
    "v1_comp_id": null,
    "status": "out of date (sha: 29803b95c88b4ec5921df2eec7111fd5d1a95daf)"
  },
  {
    "id": "mlp",
    "type": "method",
    "label": "Multilayer perceptron",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
    "v1_url": "openproblems/tasks/label_projection/methods/mlp.py",
    "v1_commit": "c2470ce02e6f196267cec1c554ba7ae389c0956a",
    "preferred_normalization": "log_cpm",
    "variants": {
      "preferred_normalization": "log_scran_pooling"
    },
    "config_path": "/viash_automount/home/rcannood/workspace/openproblems/openproblems-v2/src/label_projection/methods/mlp/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Multilayer perceptron",
    "paper_doi": "10.1016/0004-3702(89)90049-0",
    "v1_comp_id": null,
    "status": "out of date (sha: 29803b95c88b4ec5921df2eec7111fd5d1a95daf)"
  },
  {
    "id": "knn",
    "type": "method",
    "label": "KNN",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/scikit-learn/scikit-learn",
    "doc_url": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
    "v1_url": "openproblems/tasks/label_projection/methods/knn_classifier.py",
    "v1_commit": "c2470ce02e6f196267cec1c554ba7ae389c0956a",
    "preferred_normalization": "log_cpm",
    "variants": {
      "preferred_normalization": "log_scran_pooling"
    },
    "config_path": "/viash_automount/home/rcannood/workspace/openproblems/openproblems-v2/src/label_projection/methods/knn/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "K-Nearest Neighbors classifier",
    "paper_doi": "10.1109/TIT.1967.1053964",
    "v1_comp_id": null,
    "status": "out of date (sha: 29803b95c88b4ec5921df2eec7111fd5d1a95daf)"
  },
  {
    "id": "scanvi",
    "type": "method",
    "label": "SCANVI",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/YosefLab/scvi-tools",
    "doc_url": "https://scarches.readthedocs.io/en/latest/scanvi_surgery_pipeline.html",
    "v1_url": "openproblems/tasks/label_projection/methods/scvi_tools.py",
    "v1_commit": "4bb8a7e04545a06c336d3d9364a1dd84fa2af1a4",
    "preferred_normalization": "log_cpm",
    "variants": {
      "num_hvg": 2000
    },
    "config_path": "/viash_automount/home/rcannood/workspace/openproblems/openproblems-v2/src/label_projection/methods/scanvi/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "Probabilistic harmonization and annotation of single-cell \ntranscriptomics data with deep generative models.\n",
    "paper_doi": "10.1101/2020.07.16.205997",
    "v1_comp_id": "scarches_scanvi_hvg",
    "status": "out of date (sha: 29803b95c88b4ec5921df2eec7111fd5d1a95daf)"
  },
  {
    "id": "xgboost",
    "type": "method",
    "label": "XGBoost",
    "paper_name": null,
    "paper_url": null,
    "paper_year": "NA",
    "code_url": "https://github.com/dmlc/xgboost",
    "doc_url": "https://xgboost.readthedocs.io/en/stable/index.html",
    "v1_url": "openproblems/tasks/label_projection/methods/xgboost.py",
    "v1_commit": "123bb7b39c51c58e19ddf0fbbc1963c3dffde14c",
    "preferred_normalization": "log_cpm",
    "variants": {
      "preferred_normalization": "log_scran_pooling"
    },
    "config_path": "/viash_automount/home/rcannood/workspace/openproblems/openproblems-v2/src/label_projection/methods/xgboost/config.vsh.yaml",
    "namespace": "label_projection/methods",
    "description": "XGBoost: A Scalable Tree Boosting System",
    "paper_doi": "10.1145/2939672.2939785",
    "v1_comp_id": null,
    "status": "out of date (sha: 29803b95c88b4ec5921df2eec7111fd5d1a95daf)"
  }
]