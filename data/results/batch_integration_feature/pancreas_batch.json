{
    "name": "Pancreas (by batch)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://doi.org/10.1038/s41592-021-01336-8", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "HVG conservation Raw", 
            "HVG conservation Scaled", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Combat (hvg/unscaled)", 
            "Paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
            "Paper URL": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
            "Year": 2007, 
            "Library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py", 
            "Version": "1.9.1", 
            "Runtime (min)": 9.9, 
            "CPU (%)": 129.1, 
            "Memory (GB)": 3.3, 
            "Rank": 1, 
            "Mean score": 0.25205361003026355, 
            "HVG conservation Raw": 0.6155555555555555, 
            "HVG conservation Scaled": 0.25205361003026355
        }, 
        {
            "Name": "MNN (hvg/unscaled)", 
            "Paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
            "Paper URL": "https://www.nature.com/articles/nbt.4091", 
            "Year": 2018, 
            "Library": "https://github.com/chriscainx/mnnpy", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py", 
            "Version": "0.1.9.5", 
            "Runtime (min)": 18.7, 
            "CPU (%)": 342.2, 
            "Memory (GB)": 36.8, 
            "Rank": 2, 
            "Mean score": -0.025075659316904572, 
            "HVG conservation Raw": 0.4731111111111111, 
            "HVG conservation Scaled": -0.025075659316904572
        }, 
        {
            "Name": "SCALEX (hvg)", 
            "Paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space", 
            "Paper URL": "https://doi.org/10.1038/s41467-022-33758-z", 
            "Year": 2022, 
            "Library": "https://github.com/jsxlei/SCALEX", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 35.75, 
            "CPU (%)": 2191.2, 
            "Memory (GB)": 20.0, 
            "Rank": 3, 
            "Mean score": -0.06398616515348036, 
            "HVG conservation Raw": 0.45311111111111113, 
            "HVG conservation Scaled": -0.06398616515348036
        }, 
        {
            "Name": "FastMNN feature (hvg/unscaled)", 
            "Paper": "A description of the theory behind the fastMNN algorithm", 
            "Paper URL": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
            "Year": 2019, 
            "Library": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py", 
            "Version": "1.12.3", 
            "Runtime (min)": 8.916666666666666, 
            "CPU (%)": 84.7, 
            "Memory (GB)": 5.5, 
            "Rank": 4, 
            "Mean score": -0.3553826199740596, 
            "HVG conservation Raw": 0.3033333333333334, 
            "HVG conservation Scaled": -0.3553826199740596
        }, 
        {
            "Name": "FastMNN feature (hvg/scaled)", 
            "Paper": "A description of the theory behind the fastMNN algorithm", 
            "Paper URL": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
            "Year": 2019, 
            "Library": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py", 
            "Version": "1.12.3", 
            "Runtime (min)": 9.183333333333334, 
            "CPU (%)": 88.1, 
            "Memory (GB)": 5.4, 
            "Rank": 5, 
            "Mean score": -0.35667963683527887, 
            "HVG conservation Raw": 0.3026666666666667, 
            "HVG conservation Scaled": -0.35667963683527887
        }, 
        {
            "Name": "MNN (hvg/scaled)", 
            "Paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
            "Paper URL": "https://www.nature.com/articles/nbt.4091", 
            "Year": 2018, 
            "Library": "https://github.com/chriscainx/mnnpy", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py", 
            "Version": "0.1.9.5", 
            "Runtime (min)": 21.916666666666668, 
            "CPU (%)": 298.0, 
            "Memory (GB)": 87.0, 
            "Rank": 6, 
            "Mean score": -0.37570255079982706, 
            "HVG conservation Raw": 0.2928888888888889, 
            "HVG conservation Scaled": -0.37570255079982706
        }, 
        {
            "Name": "Combat (hvg/scaled)", 
            "Paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
            "Paper URL": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
            "Year": 2007, 
            "Library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py", 
            "Version": "1.9.1", 
            "Runtime (min)": 9.866666666666667, 
            "CPU (%)": 123.2, 
            "Memory (GB)": 3.6, 
            "Rank": 7, 
            "Mean score": -0.4561175961954173, 
            "HVG conservation Raw": 0.25155555555555553, 
            "HVG conservation Scaled": -0.4561175961954173
        }, 
        {
            "Name": "Scanorama gene output (hvg/scaled)", 
            "Paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
            "Paper URL": "https://www.nature.com/articles/s41587-019-0113-3", 
            "Year": 2019, 
            "Library": "https://github.com/brianhie/scanorama", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py", 
            "Version": "1.7", 
            "Runtime (min)": 16.066666666666666, 
            "CPU (%)": 237.3, 
            "Memory (GB)": 4.9, 
            "Rank": 8, 
            "Mean score": -0.4578469520103761, 
            "HVG conservation Raw": 0.2506666666666667, 
            "HVG conservation Scaled": -0.4578469520103761
        }, 
        {
            "Name": "Scanorama gene output (hvg/unscaled)", 
            "Paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
            "Paper URL": "https://www.nature.com/articles/s41587-019-0113-3", 
            "Year": 2019, 
            "Library": "https://github.com/brianhie/scanorama", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py", 
            "Version": "1.7", 
            "Runtime (min)": 15.3, 
            "CPU (%)": 207.2, 
            "Memory (GB)": 4.9, 
            "Rank": 9, 
            "Mean score": -0.4734111543450065, 
            "HVG conservation Raw": 0.2426666666666667, 
            "HVG conservation Scaled": -0.4734111543450065
        }, 
        {
            "Name": "Combat (full/unscaled)", 
            "Paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
            "Paper URL": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
            "Year": 2007, 
            "Library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py", 
            "Version": "1.9.1", 
            "Runtime (min)": 11.9, 
            "CPU (%)": 123.2, 
            "Memory (GB)": 13.9, 
            "Rank": 10, 
            "Mean score": -0.5201037613488976, 
            "HVG conservation Raw": 0.21866666666666668, 
            "HVG conservation Scaled": -0.5201037613488976
        }, 
        {
            "Name": "MNN (full/unscaled)", 
            "Paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
            "Paper URL": "https://www.nature.com/articles/nbt.4091", 
            "Year": 2018, 
            "Library": "https://github.com/chriscainx/mnnpy", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py", 
            "Version": "0.1.9.5", 
            "Runtime (min)": 29.066666666666666, 
            "CPU (%)": 2896.4, 
            "Memory (GB)": 330.2, 
            "Rank": 11, 
            "Mean score": -0.5542585386943364, 
            "HVG conservation Raw": 0.20111111111111113, 
            "HVG conservation Scaled": -0.5542585386943364
        }, 
        {
            "Name": "SCALEX (full)", 
            "Paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space", 
            "Paper URL": "https://doi.org/10.1038/s41467-022-33758-z", 
            "Year": 2022, 
            "Library": "https://github.com/jsxlei/SCALEX", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 133.98333333333332, 
            "CPU (%)": 2038.8, 
            "Memory (GB)": 24.6, 
            "Rank": 12, 
            "Mean score": -0.587116299178556, 
            "HVG conservation Raw": 0.1842222222222222, 
            "HVG conservation Scaled": -0.587116299178556
        }, 
        {
            "Name": "FastMNN feature (full/scaled)", 
            "Paper": "A description of the theory behind the fastMNN algorithm", 
            "Paper URL": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
            "Year": 2019, 
            "Library": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py", 
            "Version": "1.12.3", 
            "Runtime (min)": 14.483333333333333, 
            "CPU (%)": 127.1, 
            "Memory (GB)": 24.3, 
            "Rank": 13, 
            "Mean score": -0.7976653696498055, 
            "HVG conservation Raw": 0.076, 
            "HVG conservation Scaled": -0.7976653696498055
        }, 
        {
            "Name": "FastMNN feature (full/unscaled)", 
            "Paper": "A description of the theory behind the fastMNN algorithm", 
            "Paper URL": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
            "Year": 2019, 
            "Library": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py", 
            "Version": "1.12.3", 
            "Runtime (min)": 5.25, 
            "CPU (%)": 378.4, 
            "Memory (GB)": 17.7, 
            "Rank": 14, 
            "Mean score": -0.7980977086035452, 
            "HVG conservation Raw": 0.07577777777777778, 
            "HVG conservation Scaled": -0.7980977086035452
        }, 
        {
            "Name": "Scanorama gene output (full/unscaled)", 
            "Paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
            "Paper URL": "https://www.nature.com/articles/s41587-019-0113-3", 
            "Year": 2019, 
            "Library": "https://github.com/brianhie/scanorama", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py", 
            "Version": "1.7", 
            "Runtime (min)": 18.8, 
            "CPU (%)": 1695.0, 
            "Memory (GB)": 26.9, 
            "Rank": 15, 
            "Mean score": -0.8162559446606139, 
            "HVG conservation Raw": 0.06644444444444444, 
            "HVG conservation Scaled": -0.8162559446606139
        }, 
        {
            "Name": "MNN (full/scaled)", 
            "Paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
            "Paper URL": "https://www.nature.com/articles/nbt.4091", 
            "Year": 2018, 
            "Library": "https://github.com/chriscainx/mnnpy", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py", 
            "Version": "0.1.9.5", 
            "Runtime (min)": 37.166666666666664, 
            "CPU (%)": 2211.9, 
            "Memory (GB)": 505.1, 
            "Rank": 16, 
            "Mean score": -0.8348465196714224, 
            "HVG conservation Raw": 0.05688888888888889, 
            "HVG conservation Scaled": -0.8348465196714224
        }, 
        {
            "Name": "Scanorama gene output (full/scaled)", 
            "Paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
            "Paper URL": "https://www.nature.com/articles/s41587-019-0113-3", 
            "Year": 2019, 
            "Library": "https://github.com/brianhie/scanorama", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py", 
            "Version": "1.7", 
            "Runtime (min)": 17.15, 
            "CPU (%)": 1150.6, 
            "Memory (GB)": 33.0, 
            "Rank": 17, 
            "Mean score": -0.8460873324686555, 
            "HVG conservation Raw": 0.051111111111111114, 
            "HVG conservation Scaled": -0.8460873324686555
        }, 
        {
            "Name": "Combat (full/scaled)", 
            "Paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
            "Paper URL": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
            "Year": 2007, 
            "Library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py", 
            "Version": "1.9.1", 
            "Runtime (min)": 15.3, 
            "CPU (%)": 139.1, 
            "Memory (GB)": 15.9, 
            "Rank": 18, 
            "Mean score": -0.8867271941201903, 
            "HVG conservation Raw": 0.030222222222222223, 
            "HVG conservation Scaled": -0.8867271941201903
        }
    ]
}