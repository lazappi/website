{
    "name": "CeNGEN (by batch)", 
    "data_url": "https://github.com/Munfred/wormcells-data/releases/download/taylor2020/taylor2020.h5ad", 
    "data_reference": "https://doi.org/10.1016/j.neuron.2018.07.042", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "Accuracy Raw", 
            "Accuracy Scaled", 
            "F1 score Raw", 
            "F1 score Scaled", 
            "Macro F1 score Raw", 
            "Macro F1 score Scaled", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 28.55, 
            "CPU (%)": 1739.5, 
            "Memory (GB)": 2.1, 
            "Rank": 1, 
            "Mean score": 0.7638185148285515, 
            "Accuracy Raw": 0.8771719592570402, 
            "Accuracy Scaled": 0.8757575757575757, 
            "F1 score Raw": 0.8736530087175254, 
            "F1 score Scaled": 0.8716167672203569, 
            "Macro F1 score Raw": 0.5450304343580864, 
            "Macro F1 score Scaled": 0.5440812015077219
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 174.73333333333332, 
            "CPU (%)": 2757.7, 
            "Memory (GB)": 7.1, 
            "Rank": 2, 
            "Mean score": 0.7374751415222097, 
            "Accuracy Raw": 0.8615937687237867, 
            "Accuracy Scaled": 0.86, 
            "F1 score Raw": 0.8611100258180678, 
            "F1 score Scaled": 0.8588716382941605, 
            "Macro F1 score Raw": 0.49460821829984436, 
            "Macro F1 score Scaled": 0.49355378627246865
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 33.016666666666666, 
            "CPU (%)": 122.2, 
            "Memory (GB)": 1100.0, 
            "Rank": 3, 
            "Mean score": 0.7217863175695899, 
            "Accuracy Raw": 0.8478130617136009, 
            "Accuracy Scaled": 0.8460606060606061, 
            "F1 score Raw": 0.8432431418068973, 
            "F1 score Scaled": 0.8407168068591585, 
            "Macro F1 score Raw": 0.4796671443590633, 
            "Macro F1 score Scaled": 0.4785815397890049
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 43.266666666666666, 
            "CPU (%)": 1004.2, 
            "Memory (GB)": 7.1, 
            "Rank": 4, 
            "Mean score": 0.7131135203190712, 
            "Accuracy Raw": 0.8304373876572798, 
            "Accuracy Scaled": 0.8284848484848485, 
            "F1 score Raw": 0.84212350991216, 
            "F1 score Scaled": 0.8395791306809565, 
            "Macro F1 score Raw": 0.4723773954428312, 
            "Macro F1 score Scaled": 0.4712765817914083
        }, 
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 17.55, 
            "CPU (%)": 1768.0, 
            "Memory (GB)": 1.9, 
            "Rank": 5, 
            "Mean score": 0.7087908932871089, 
            "Accuracy Raw": 0.8298382264829239, 
            "Accuracy Scaled": 0.8278787878787879, 
            "F1 score Raw": 0.8360389933414547, 
            "F1 score Scaled": 0.833396554433438, 
            "Macro F1 score Raw": 0.4662110165213758, 
            "Macro F1 score Scaled": 0.4650973375491006
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 65.71666666666667, 
            "CPU (%)": 605.5, 
            "Memory (GB)": 7.1, 
            "Rank": 6, 
            "Mean score": 0.6822842229502171, 
            "Accuracy Raw": 0.7741162372678251, 
            "Accuracy Scaled": 0.7715151515151516, 
            "F1 score Raw": 0.8045302085786118, 
            "F1 score Scaled": 0.8013799657695428, 
            "Macro F1 score Raw": 0.47505278338002344, 
            "Macro F1 score Scaled": 0.4739575515659568
        }, 
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 30.316666666666666, 
            "CPU (%)": 2570.3, 
            "Memory (GB)": 1.6, 
            "Rank": 7, 
            "Mean score": 0.6672925478638247, 
            "Accuracy Raw": 0.81725584182145, 
            "Accuracy Scaled": 0.8151515151515152, 
            "F1 score Raw": 0.8230789548278853, 
            "F1 score Scaled": 0.8202276485146509, 
            "Macro F1 score Raw": 0.3678174438627449, 
            "Macro F1 score Scaled": 0.36649847992530826
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 29.15, 
            "CPU (%)": 108.1, 
            "Memory (GB)": 7.1, 
            "Rank": 8, 
            "Mean score": 0.6395207306075272, 
            "Accuracy Raw": 0.7831036548831636, 
            "Accuracy Scaled": 0.7806060606060606, 
            "F1 score Raw": 0.799995471718139, 
            "F1 score Scaled": 0.7967721458915775, 
            "Macro F1 score Raw": 0.3425556545904881, 
            "Macro F1 score Scaled": 0.34118398532494365
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.0.2", 
            "Runtime (min)": 1.2166666666666668, 
            "CPU (%)": 333.6, 
            "Memory (GB)": 2.4, 
            "Rank": 9, 
            "Mean score": 0.6286749022200199, 
            "Accuracy Raw": 0.7549430796884362, 
            "Accuracy Scaled": 0.7521212121212122, 
            "F1 score Raw": 0.7877839853655667, 
            "F1 score Scaled": 0.7843638559982099, 
            "Macro F1 score Raw": 0.3508939111545309, 
            "Macro F1 score Scaled": 0.34953963854063763
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 151.55, 
            "CPU (%)": 2695.2, 
            "Memory (GB)": 11.6, 
            "Rank": 10, 
            "Mean score": 0.48310573518443967, 
            "Accuracy Raw": 0.6470940683043739, 
            "Accuracy Scaled": 0.6430303030303031, 
            "F1 score Raw": 0.6168788176313944, 
            "F1 score Scaled": 0.6107043354212158, 
            "Macro F1 score Raw": 0.19725738168553295, 
            "Macro F1 score Scaled": 0.19558256710180003
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 70.25, 
            "CPU (%)": 1469.9, 
            "Memory (GB)": 4.5, 
            "Rank": 11, 
            "Mean score": 0.21817660700032135, 
            "Accuracy Raw": 0.2732174955062912, 
            "Accuracy Scaled": 0.2648484848484849, 
            "F1 score Raw": 0.2350951261874017, 
            "F1 score Scaled": 0.2227677171242013, 
            "Macro F1 score Raw": 0.16864812298517712, 
            "Macro F1 score Scaled": 0.1669136190282778
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 163.28333333333333, 
            "CPU (%)": 1625.7, 
            "Memory (GB)": 12.9, 
            "Rank": 12, 
            "Mean score": 0.16961868678301725, 
            "Accuracy Raw": 0.2474535650089874, 
            "Accuracy Scaled": 0.2387878787878788, 
            "F1 score Raw": 0.1984075180288194, 
            "F1 score Scaled": 0.18548884177827976, 
            "Macro F1 score Raw": 0.08648526549916989, 
            "Macro F1 score Scaled": 0.08457933978289311
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 135.21666666666667, 
            "CPU (%)": 1608.4, 
            "Memory (GB)": 5.2, 
            "Rank": 13, 
            "Mean score": 0.025294749461459636, 
            "Accuracy Raw": 0.05991611743559017, 
            "Accuracy Scaled": 0.049090909090909095, 
            "F1 score Raw": 0.0241310062189647, 
            "F1 score Scaled": 0.00840364365364271, 
            "Macro F1 score Raw": 0.02043342963420583, 
            "Macro F1 score Scaled": 0.018389695639827095
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 1.2166666666666668, 
            "CPU (%)": 18.6, 
            "Memory (GB)": 0.994, 
            "Rank": 14, 
            "Mean score": -0.0019287834092919544, 
            "Accuracy Raw": 0.022168963451168363, 
            "Accuracy Scaled": 0.010909090909090908, 
            "F1 score Raw": 0.0009616080277763535, 
            "F1 score Scaled": -0.015139158681027318, 
            "Macro F1 score Raw": 0.0005289794984702484, 
            "Macro F1 score Scaled": -0.0015562824559394533
        }
    ]
}