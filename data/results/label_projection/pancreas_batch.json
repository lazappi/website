{
    "name": "Pancreas (by batch)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://openproblems.bio/bibliography#luecken2022benchmarking", 
    "headers": {
        "names": [
            "Rank", 
            "Name", 
            "Mean score", 
            "Accuracy Raw", 
            "Accuracy Scaled", 
            "F1 score Raw", 
            "F1 score Scaled", 
            "Macro F1 score Raw", 
            "Macro F1 score Scaled", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Multilayer perceptron (log CP10k)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://openproblems.bio/bibliography#hinton1989connectionist", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 3.05, 
            "CPU (%)": 704.8, 
            "Memory (GB)": 2.3, 
            "Rank": 1, 
            "Mean score": 0.9452459302929622, 
            "Accuracy Raw": 0.9613199891804165, 
            "Accuracy Scaled": 0.9515910629654705, 
            "F1 score Raw": 0.9614691135565004, 
            "F1 score Scaled": 0.951625279981562, 
            "Macro F1 score Raw": 0.9371235963916467, 
            "Macro F1 score Scaled": 0.932521447931854
        }, 
        {
            "Name": "Logistic regression (log CP10k)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://openproblems.bio/bibliography#hosmer2013applied", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 4.283333333333333, 
            "CPU (%)": 374.3, 
            "Memory (GB)": 2.3, 
            "Rank": 2, 
            "Mean score": 0.9219661242310803, 
            "Accuracy Raw": 0.9659183121449825, 
            "Accuracy Scaled": 0.9573459715639809, 
            "F1 score Raw": 0.9660964059536957, 
            "F1 score Scaled": 0.9574347485616842, 
            "Macro F1 score Raw": 0.8612716740296026, 
            "Macro F1 score Scaled": 0.8511176525675757
        }, 
        {
            "Name": "XGBoost (log CP10k)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://openproblems.bio/bibliography#chen2016xgboost", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 11.866666666666667, 
            "CPU (%)": 294.1, 
            "Memory (GB)": 2.7, 
            "Rank": 3, 
            "Mean score": 0.9148678399562438, 
            "Accuracy Raw": 0.93913984311604, 
            "Accuracy Scaled": 0.9238320920785376, 
            "F1 score Raw": 0.9383958828902009, 
            "F1 score Scaled": 0.9226573226769779, 
            "Macro F1 score Raw": 0.9050628910586268, 
            "Macro F1 score Scaled": 0.8981141051132159
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://openproblems.bio/bibliography#hao2021integrated", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.3.0", 
            "Runtime (min)": 13.766666666666667, 
            "CPU (%)": 125.4, 
            "Memory (GB)": 445.5, 
            "Rank": 4, 
            "Mean score": 0.9123519645981673, 
            "Accuracy Raw": 0.9588855829050582, 
            "Accuracy Scaled": 0.9485443466486121, 
            "F1 score Raw": 0.9582796607282135, 
            "F1 score Scaled": 0.9476209888317427, 
            "Macro F1 score Raw": 0.8517420844591291, 
            "Macro F1 score Scaled": 0.8408905583141469
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://openproblems.bio/bibliography#hinton1989connectionist", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 12.116666666666667, 
            "CPU (%)": 936.0, 
            "Memory (GB)": 8.3, 
            "Rank": 5, 
            "Mean score": 0.8721423148255963, 
            "Accuracy Raw": 0.9505004057343792, 
            "Accuracy Scaled": 0.9380501015572105, 
            "F1 score Raw": 0.9518923176044292, 
            "F1 score Scaled": 0.9396018134689376, 
            "Macro F1 score Raw": 0.7565910029566972, 
            "Macro F1 score Scaled": 0.738775029450641
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://openproblems.bio/bibliography#chen2016xgboost", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 12.033333333333333, 
            "CPU (%)": 328.4, 
            "Memory (GB)": 8.5, 
            "Rank": 6, 
            "Mean score": 0.8692336153550088, 
            "Accuracy Raw": 0.9342710305653232, 
            "Accuracy Scaled": 0.9177386594448206, 
            "F1 score Raw": 0.9342714399948299, 
            "F1 score Scaled": 0.9174791711027032, 
            "Macro F1 score Raw": 0.7880000488209941, 
            "Macro F1 score Scaled": 0.7724830155175025
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://openproblems.bio/bibliography#xu2021probabilistic", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 43.483333333333334, 
            "CPU (%)": 2440.0, 
            "Memory (GB)": 4.5, 
            "Rank": 7, 
            "Mean score": 0.8424656058530382, 
            "Accuracy Raw": 0.9575331349743035, 
            "Accuracy Scaled": 0.9468517264725795, 
            "F1 score Raw": 0.9561489780630695, 
            "F1 score Scaled": 0.9449459614215736, 
            "Macro F1 score Raw": 0.6604518695765396, 
            "Macro F1 score Scaled": 0.6355991296649613
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://openproblems.bio/bibliography#xu2021probabilistic", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 32.86666666666667, 
            "CPU (%)": 2380.4, 
            "Memory (GB)": 6.9, 
            "Rank": 8, 
            "Mean score": 0.8408647655821914, 
            "Accuracy Raw": 0.9578036245604544, 
            "Accuracy Scaled": 0.947190250507786, 
            "F1 score Raw": 0.9565554538153656, 
            "F1 score Scaled": 0.9454562832056427, 
            "Macro F1 score Raw": 0.6551859354628086, 
            "Macro F1 score Scaled": 0.6299477630331457
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://openproblems.bio/bibliography#lotfollahi2020query", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 24.166666666666668, 
            "CPU (%)": 2612.9, 
            "Memory (GB)": 5.8, 
            "Rank": 9, 
            "Mean score": 0.8315045342820774, 
            "Accuracy Raw": 0.9507708953205302, 
            "Accuracy Scaled": 0.938388625592417, 
            "F1 score Raw": 0.9494991049364069, 
            "F1 score Scaled": 0.9365971851448547, 
            "Macro F1 score Raw": 0.6454766237283966, 
            "Macro F1 score Scaled": 0.6195277921089605
        }, 
        {
            "Name": "K-neighbors classifier (log CP10k)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://openproblems.bio/bibliography#cover1967nearest", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.75, 
            "CPU (%)": 298.1, 
            "Memory (GB)": 2.3, 
            "Rank": 10, 
            "Mean score": 0.8210678942067826, 
            "Accuracy Raw": 0.8761157695428726, 
            "Accuracy Scaled": 0.844955991875423, 
            "F1 score Raw": 0.8754901427001439, 
            "F1 score Scaled": 0.8436804848689813, 
            "Macro F1 score Raw": 0.7899420939621173, 
            "Macro F1 score Scaled": 0.7745672058759436
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://openproblems.bio/bibliography#hosmer2013applied", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 16.783333333333335, 
            "CPU (%)": 131.2, 
            "Memory (GB)": 8.5, 
            "Rank": 11, 
            "Mean score": 0.8123245205275528, 
            "Accuracy Raw": 0.9361644576683797, 
            "Accuracy Scaled": 0.9201083276912659, 
            "F1 score Raw": 0.9352596229571549, 
            "F1 score Scaled": 0.9187198140917909, 
            "Macro F1 score Raw": 0.6255525644499819, 
            "Macro F1 score Scaled": 0.5981454197996013
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://openproblems.bio/bibliography#lotfollahi2020query", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 21.866666666666667, 
            "CPU (%)": 1358.5, 
            "Memory (GB)": 4.0, 
            "Rank": 12, 
            "Mean score": 0.7827910887743661, 
            "Accuracy Raw": 0.9488774682174737, 
            "Accuracy Scaled": 0.9360189573459716, 
            "F1 score Raw": 0.9447470645943549, 
            "F1 score Scaled": 0.9306310981356659, 
            "Macro F1 score Raw": 0.517070542013646, 
            "Macro F1 score Scaled": 0.4817232108414611
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://openproblems.bio/bibliography#cover1967nearest", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 8.766666666666667, 
            "CPU (%)": 118.7, 
            "Memory (GB)": 8.3, 
            "Rank": 13, 
            "Mean score": 0.716255949285561, 
            "Accuracy Raw": 0.8404111441709494, 
            "Accuracy Scaled": 0.8002708192281652, 
            "F1 score Raw": 0.8432879201174616, 
            "F1 score Scaled": 0.8032512696290738, 
            "Macro F1 score Raw": 0.5762607476982434, 
            "Macro F1 score Scaled": 0.5452457589994437
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio/bibliography#openproblems", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.7.0", 
            "Runtime (min)": 1.0833333333333333, 
            "CPU (%)": 19.9, 
            "Memory (GB)": 0.6881, 
            "Rank": 14, 
            "Mean score": 0.04137646007562332, 
            "Accuracy Raw": 0.34947254530700567, 
            "Accuracy Scaled": 0.18584969532836826, 
            "F1 score Raw": 0.1810056237869919, 
            "F1 score Scaled": -0.02823026675171071, 
            "Macro F1 score Raw": 0.03699567620192996, 
            "Macro F1 score Scaled": -0.03349004834978761
        }
    ]
}