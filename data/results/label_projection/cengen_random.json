{
    "name": "CeNGEN (random split)", 
    "data_url": "https://github.com/Munfred/wormcells-data/releases/download/taylor2020/taylor2020.h5ad", 
    "data_reference": "https://openproblems.bio/bibliography#hammarlund2018cengen", 
    "headers": {
        "names": [
            "Rank", 
            "Name", 
            "Mean score", 
            "Accuracy Raw", 
            "Accuracy Scaled", 
            "F1 score Raw", 
            "F1 score Scaled", 
            "Macro F1 score Raw", 
            "Macro F1 score Scaled", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Logistic regression (log CP10k)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://openproblems.bio/bibliography#hosmer2013applied", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 17.05, 
            "CPU (%)": 1695.9, 
            "Memory (GB)": 1.9, 
            "Rank": 1, 
            "Mean score": 0.8621999377714986, 
            "Accuracy Raw": 0.8880597014925373, 
            "Accuracy Scaled": 0.8862372332895136, 
            "F1 score Raw": 0.8885520160690479, 
            "F1 score Scaled": 0.8867276425211412, 
            "Macro F1 score Raw": 0.8147889990324998, 
            "Macro F1 score Scaled": 0.8136349375038411
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://openproblems.bio/bibliography#hinton1989connectionist", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 41.05, 
            "CPU (%)": 1629.7, 
            "Memory (GB)": 6.8, 
            "Rank": 2, 
            "Mean score": 0.8473041288489762, 
            "Accuracy Raw": 0.8760696517412936, 
            "Accuracy Scaled": 0.8740519769440793, 
            "F1 score Raw": 0.876423256983233, 
            "F1 score Scaled": 0.8744003389084123, 
            "Macro F1 score Raw": 0.7947390646397122, 
            "Macro F1 score Scaled": 0.7934600706944369
        }, 
        {
            "Name": "XGBoost (log CP10k)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://openproblems.bio/bibliography#chen2016xgboost", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 13.033333333333333, 
            "CPU (%)": 1952.8, 
            "Memory (GB)": 2.0, 
            "Rank": 3, 
            "Mean score": 0.8261141930000498, 
            "Accuracy Raw": 0.8450248756218905, 
            "Accuracy Scaled": 0.8425017696430377, 
            "F1 score Raw": 0.8478216540565168, 
            "F1 score Scaled": 0.8453305354277986, 
            "Macro F1 score Raw": 0.7918075344258317, 
            "Macro F1 score Scaled": 0.7905102739293134
        }, 
        {
            "Name": "Multilayer perceptron (log CP10k)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://openproblems.bio/bibliography#hinton1989connectionist", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 8.65, 
            "CPU (%)": 5600.1, 
            "Memory (GB)": 1.7, 
            "Rank": 4, 
            "Mean score": 0.826011695084746, 
            "Accuracy Raw": 0.857412935323383, 
            "Accuracy Scaled": 0.8550915158256648, 
            "F1 score Raw": 0.8570490698107908, 
            "F1 score Scaled": 0.8547090014983175, 
            "Macro F1 score Raw": 0.7696697702436196, 
            "Macro F1 score Scaled": 0.7682345679302559
        }, 
        {
            "Name": "K-neighbors classifier (log CP10k)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://openproblems.bio/bibliography#cover1967nearest", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 5.1, 
            "CPU (%)": 426.1, 
            "Memory (GB)": 2.8, 
            "Rank": 5, 
            "Mean score": 0.8255884948616337, 
            "Accuracy Raw": 0.8544278606965174, 
            "Accuracy Scaled": 0.8520578420467186, 
            "F1 score Raw": 0.8574368392184077, 
            "F1 score Scaled": 0.8551031185869332, 
            "Macro F1 score Raw": 0.7710312428422449, 
            "Macro F1 score Scaled": 0.7696045239512491
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://openproblems.bio/bibliography#hosmer2013applied", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 58.55, 
            "CPU (%)": 565.7, 
            "Memory (GB)": 6.8, 
            "Rank": 6, 
            "Mean score": 0.8140568174201869, 
            "Accuracy Raw": 0.8277114427860697, 
            "Accuracy Scaled": 0.8249064617251491, 
            "F1 score Raw": 0.8395355171294128, 
            "F1 score Scaled": 0.8369087566659037, 
            "Macro F1 score Raw": 0.7817153792270511, 
            "Macro F1 score Scaled": 0.7803552338695077
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://openproblems.bio/bibliography#cover1967nearest", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 39.2, 
            "CPU (%)": 104.7, 
            "Memory (GB)": 6.8, 
            "Rank": 7, 
            "Mean score": 0.8083112210595363, 
            "Accuracy Raw": 0.8423383084577114, 
            "Accuracy Scaled": 0.839771463241986, 
            "F1 score Raw": 0.8421355968376725, 
            "F1 score Scaled": 0.8395513989802769, 
            "Macro F1 score Raw": 0.7471861004464457, 
            "Macro F1 score Scaled": 0.7456108009563461
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://openproblems.bio/bibliography#hao2021integrated", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.3.0", 
            "Runtime (min)": 34.05, 
            "CPU (%)": 124.3, 
            "Memory (GB)": 902.0, 
            "Rank": 8, 
            "Mean score": 0.8017771174638604, 
            "Accuracy Raw": 0.8335820895522388, 
            "Accuracy Scaled": 0.8308726868237435, 
            "F1 score Raw": 0.8331296104552344, 
            "F1 score Scaled": 0.8303979870209068, 
            "Macro F1 score Raw": 0.7456455771357751, 
            "Macro F1 score Scaled": 0.7440606785469309
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://openproblems.bio/bibliography#chen2016xgboost", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 45.56666666666667, 
            "CPU (%)": 785.4, 
            "Memory (GB)": 6.8, 
            "Rank": 9, 
            "Mean score": 0.8007166457095933, 
            "Accuracy Raw": 0.8214427860696517, 
            "Accuracy Scaled": 0.8185357467893619, 
            "F1 score Raw": 0.8271320672240113, 
            "F1 score Scaled": 0.8243022656186884, 
            "Macro F1 score Raw": 0.7608023803048733, 
            "Macro F1 score Scaled": 0.7593119247207295
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://openproblems.bio/bibliography#xu2021probabilistic", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 131.9, 
            "CPU (%)": 2577.3, 
            "Memory (GB)": 10.0, 
            "Rank": 10, 
            "Mean score": 0.4912580994060671, 
            "Accuracy Raw": 0.6699004975124379, 
            "Accuracy Scaled": 0.6645262412781879, 
            "F1 score Raw": 0.5783066425846821, 
            "F1 score Scaled": 0.5714036356440354, 
            "Macro F1 score Raw": 0.24256405286454533, 
            "Macro F1 score Scaled": 0.23784442129597783
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://openproblems.bio/bibliography#xu2021probabilistic", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 177.03333333333333, 
            "CPU (%)": 1926.2, 
            "Memory (GB)": 9.4, 
            "Rank": 11, 
            "Mean score": 0.4508180491930409, 
            "Accuracy Raw": 0.6243283582089553, 
            "Accuracy Scaled": 0.6182121549196077, 
            "F1 score Raw": 0.534689035369248, 
            "F1 score Scaled": 0.5270720199196979, 
            "Macro F1 score Raw": 0.2120795551528046, 
            "Macro F1 score Scaled": 0.20716997273981735
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://openproblems.bio/bibliography#lotfollahi2020query", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 137.81666666666666, 
            "CPU (%)": 2733.4, 
            "Memory (GB)": 13.1, 
            "Rank": 12, 
            "Mean score": 0.2537233516087733, 
            "Accuracy Raw": 0.4185074626865672, 
            "Accuracy Scaled": 0.40904034786126, 
            "F1 score Raw": 0.2934946855786592, 
            "F1 score Scaled": 0.2819293834383861, 
            "Macro F1 score Raw": 0.07595808746378144, 
            "Macro F1 score Scaled": 0.07020032352667385
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://openproblems.bio/bibliography#lotfollahi2020query", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.20.0", 
            "Runtime (min)": 98.16666666666667, 
            "CPU (%)": 2411.1, 
            "Memory (GB)": 11.0, 
            "Rank": 13, 
            "Mean score": 0.23040397380930974, 
            "Accuracy Raw": 0.3824378109452736, 
            "Accuracy Scaled": 0.3723834563656588, 
            "F1 score Raw": 0.27098976845559347, 
            "F1 score Scaled": 0.25905606686968663, 
            "Macro F1 score Raw": 0.06559473682674356, 
            "Macro F1 score Scaled": 0.059772398192583814
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio/bibliography#openproblems", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.7.0", 
            "Runtime (min)": 1.1, 
            "CPU (%)": 15.2, 
            "Memory (GB)": 0.2319, 
            "Rank": 14, 
            "Mean score": 0.007361562245208086, 
            "Accuracy Raw": 0.053880597014925376, 
            "Accuracy Scaled": 0.03847709576296896, 
            "F1 score Raw": 0.0055093883366061636, 
            "F1 score Scaled": -0.010770155730196069, 
            "Macro F1 score Raw": 0.0006050402703742284, 
            "Macro F1 score Scaled": -0.005622253297148636
        }
    ]
}